[{"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\index.js":"1","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\App.js":"2","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\reportWebVitals.js":"3","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\directory\\Directory.js":"4","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\aboutus\\AboutUs.js":"5","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\home\\Home.js":"6","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\getstarted\\GetStarted.js":"7","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\header\\Header.js":"8","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\Profile.js":"9","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\login\\Login.js":"10","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\freshresources\\FreshResources.js":"11","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\DropDowns.js":"12","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\DropDownsContainer.js":"13","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\header\\Menu.js":"14","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\Modal.js":"15","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\Backdrop.js":"16","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\auth.service.js":"17","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\user.service.js":"18","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\auth-header.js":"19","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\user\\board.moderator.js":"20","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\user\\board.admin.js":"21","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\user\\board.user.js":"22","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\itemNameList.js":"23","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\item.service.js":"24","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\itemTypeList.js":"25","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\AddItems.js":"26","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\CountdownClock.js":"27","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\ModalMenu.js":"28","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\ManualMenu.js":"29","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\Search.js":"30","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\RecipeList.js":"31","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\recipe-service.js":"32","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\http-common.js":"33","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\Recipes.js":"34","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\AddRecipe.js":"35","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\EditModal.js":"36"},{"size":486,"mtime":1612211649426,"results":"37","hashOfConfig":"38"},{"size":429,"mtime":1612367305782,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":2413,"mtime":1611949029246,"results":"41","hashOfConfig":"38"},{"size":218,"mtime":1610745023881,"results":"42","hashOfConfig":"38"},{"size":8242,"mtime":1612197670536,"results":"43","hashOfConfig":"38"},{"size":9223,"mtime":1612376715955,"results":"44","hashOfConfig":"38"},{"size":6909,"mtime":1612297785838,"results":"45","hashOfConfig":"38"},{"size":13285,"mtime":1612390216306,"results":"46","hashOfConfig":"38"},{"size":5640,"mtime":1612222269295,"results":"47","hashOfConfig":"38"},{"size":0,"mtime":1612218751615,"results":"48","hashOfConfig":"38"},{"size":1030,"mtime":1610740082871,"results":"49","hashOfConfig":"38"},{"size":2474,"mtime":1610741011736,"results":"50","hashOfConfig":"38"},{"size":3521,"mtime":1610831919355,"results":"51","hashOfConfig":"38"},{"size":539,"mtime":1612386046844,"results":"52","hashOfConfig":"38"},{"size":246,"mtime":1611090469934,"results":"53","hashOfConfig":"38"},{"size":951,"mtime":1611772843267,"results":"54","hashOfConfig":"38"},{"size":550,"mtime":1611706777643,"results":"55","hashOfConfig":"38"},{"size":284,"mtime":1611332605919,"results":"56","hashOfConfig":"38"},{"size":900,"mtime":1611256550777,"results":"57","hashOfConfig":"38"},{"size":892,"mtime":1611256591568,"results":"58","hashOfConfig":"38"},{"size":890,"mtime":1611256450714,"results":"59","hashOfConfig":"38"},{"size":717,"mtime":1611707316423,"results":"60","hashOfConfig":"38"},{"size":922,"mtime":1612199873828,"results":"61","hashOfConfig":"38"},{"size":228,"mtime":1611603459245,"results":"62","hashOfConfig":"38"},{"size":3966,"mtime":1611615084431,"results":"63","hashOfConfig":"38"},{"size":2344,"mtime":1612023855891,"results":"64","hashOfConfig":"38"},{"size":541,"mtime":1612129662545,"results":"65","hashOfConfig":"38"},{"size":560,"mtime":1612386048859,"results":"66","hashOfConfig":"38"},{"size":2149,"mtime":1612218979933,"results":"67","hashOfConfig":"38"},{"size":7514,"mtime":1612391668210,"results":"68","hashOfConfig":"38"},{"size":1263,"mtime":1612391101797,"results":"69","hashOfConfig":"38"},{"size":174,"mtime":1612291824585,"results":"70","hashOfConfig":"38"},{"size":5883,"mtime":1612297926910,"results":"71","hashOfConfig":"38"},{"size":4546,"mtime":1612298182118,"results":"72","hashOfConfig":"38"},{"size":555,"mtime":1612386418521,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1y6m2mg",{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"76"},"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\index.js",[],["168","169"],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\App.js",["170","171","172"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Directory from './component/directory/Directory';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport RecipeList from './component/search/RecipeList';\nimport AddRecipe from './component/search/AddRecipe';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Directory />\n    </BrowserRouter>\n  );\n}\nexport default App;\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\reportWebVitals.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\directory\\Directory.js",["173","174","175","176","177","178"],"import React, {Component} from 'react';\r\nimport Header from '../header/Header';\r\nimport Home from '../home/Home';\r\nimport Login from '../login/Login';\r\nimport FreshResources from '../freshresources/FreshResources';\r\nimport GetStarted from '../getstarted/GetStarted';\r\nimport {Router, Route, Switch, withRouter} from 'react-router-dom';\r\nimport Profile from '../profile/Profile';\r\nimport AboutUs from '../aboutus/AboutUs';\r\nimport itemNameList from './../profile/itemNameList';\r\nimport itemTypeList from './../profile/itemTypeList';\r\nimport AddItems from './../profile/AddItems';\r\n\r\nclass Directory extends Component {\r\n    render() {\r\n        let routes = (\r\n            <div>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/signup\" component={GetStarted} />\r\n                <Route path=\"/fresh-resources\" component={FreshResources} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route path=\"about-us\" component={AboutUs} />\r\n                <Route path=\"/profile\" component={Profile} />\r\n            </div>\r\n        )\r\n\r\n        // if(localStorage.getItem(!\"loggedInUser\")) {\r\n        //     routes = (\r\n        //         <div>\r\n        //             <Route exact path=\"/profile\" component={Profile} />\r\n        //             <Route path=\"/\" component={Home} />\r\n                    \r\n        //         </div>\r\n        //     )\r\n        // }\r\n        // <div>\r\n        //     <Router>\r\n        //         <Header />\r\n        //         <div className=\"container\">\r\n        //             <Switch>\r\n        //                 {/* <Route path=\"/profile\" exact component={Profile}></Route>\r\n        //                 <Route path =\"/profile/items\" component={Profile}></Route> */}\r\n        //                 <Route path = \"/add-item\" component={AddItems}></Route>\r\n        //                 <Route path = \"/display-by-name\" component={itemNameList}></Route>\r\n        //                 <Route path = \"/display-by-type\" component={itemTypeList}></Route>\r\n        //             </Switch>\r\n        //         </div>\r\n\r\n        //     </Router>\r\n        // </div>\r\n        return (\r\n            <div className=\"table-wrapper\">\r\n                <Header {...this.props} />\r\n                {/* <Route path=\"about-us\" component={AboutUs} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Directory);","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\aboutus\\AboutUs.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\home\\Home.js",["179","180","181"],"import React, { Component } from 'react';\r\nimport DropDownsContainer from '../dropdowns/DropDownsContainer';\r\nimport HomePic from '../../images/HomePic.jpg';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport UserService from \"./../../services/user.service\";\r\nimport authHeader from './../../services/auth-header';\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email:'',\r\n            message:'',\r\n            content: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserService.getPublicContent().then(\r\n            response => {\r\n                this.setState({\r\n                    content: response.data\r\n                });\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    content:\r\n                    (error.response && error.response.data) || \r\n                    error.message ||\r\n                    error.toString()\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n   \r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        Axios.post('http://localhost8080/freshdate/send-message',\r\n        this.state)\r\n    .then(response => {\r\n       if (response.data.status === 'success') {\r\n           alert(\"Message Sent!\");\r\n           this.resetForm()\r\n       } else if (response.data.status === 'fail') {\r\n           alert(\"message failed to send.\")\r\n       }\r\n    })  \r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({name: '', email: '', message: ''})\r\n    }\r\n\r\n    render() {\r\n        let signInSignOut = (\r\n            <form className=\"right\">\r\n                <input className=\"search\" type=\"text\" name=\"keyword\" placeholder=\"Search Common Expiration Times\" />\r\n                <button className=\"button alt\" type=\"submit\">Search</button>\r\n                <Link className=\"right\" to=\"/login\">\r\n                    <button className=\"button alt\">Login</button>\r\n                </Link>\r\n            </form>\r\n        )\r\n\r\n        if (localStorage.getItem(\"loggedInUser\")) {\r\n            signInSignOut = (\r\n                <form className=\"right\">\r\n                    <input className=\"search\" type=\"text\" name=\"keyword\" placeholder=\"Search Common Expiration Times\" />\r\n                    <button className=\"button alt\" type=\"submit\">Search</button>\r\n                    <Link className=\"right\" to=\"/logout\">\r\n                        <button className=\"button alt\">Logout</button>\r\n                    </Link>\r\n                </form>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <section>\r\n                <div id=\"banner\" className=\"home-content\">\r\n                    <h2>Begin Your Fresh Journey Here</h2>\r\n                    <p>Don't let the \"one that rot away\" get to you\r\n                        and your budget. <br />FreshDate will keep track of\r\n                        expiration dates on your produce, <br />\r\n                        giving you freedom\r\n                        and piece of mind to pursue other tasks. <br />\r\n                        Find out more below.\r\n                    </p>\r\n                    <ul class=\"actions\">\r\n                        <Link className=\"actions-link\" to=\"/get-started\">\r\n                            <li><button className=\"button alt\">Get Started</button></li>\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"one\" className=\"wrapper\">\r\n                    <div className=\"inner flex flex-3\">\r\n                        <div className=\"flex-item left\">\r\n                            <div>\r\n                                <h3>Convenience</h3>\r\n                                <p>Free your mind from the irritating <br />\r\n                                thought of using your produce <br />\r\n                                \"before it goes bad\"</p>\r\n                            </div>\r\n                            <div>\r\n                                <h3>Resolve</h3>\r\n                                <p>Groceries going bad and you never <br />\r\n                                know what you want? <br />\r\n                                We are here to help provide recipes and suggestions for you\r\n                                to use</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex-item image fit round\">\r\n                            <img src={HomePic} alt=\"\" />\r\n                        </div>\r\n                        <div class=\"flex-item right\">\r\n                            <div>\r\n                                <h3>Budget</h3>\r\n                                <p>Throwing away food impacts your budget <br />\r\n                                in ways that are all preventable. <br />\r\n                                We will manage your groceries <br />\r\n                                and keep your belly and your wallet full</p>\r\n                            </div>\r\n                            <div>\r\n                                <h3>Community</h3>\r\n                                <p>Read our blogs to find out the best <br />\r\n                                ways to save and use your produce <br />\r\n                                manage to budget, and so much more</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div id=\"two\" className=\"wrapper style1 special\">\r\n                        <div class=\"inner\">\r\n                            <h2>Prevention is Key</h2>\r\n                            <figure>\r\n                                <blockquote>\r\n                                    \"2010 food loss and waste at the retail and consumer levels was <b>31 percent of the food supply</b> <br />\r\n                                    equaling <b>133 billion pounds and almost $162 billion dollars.</b>\"\r\n\t\t\t\t\t    </blockquote>\r\n                                <footer>\r\n                                    <cite class=\"author\">USDA.gov</cite>\r\n\r\n                                </footer>\r\n                            </figure>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <form id=\"footer\" onSubmit={this.handleSubmit.bind(this)} method=\"Post\">\r\n                        <div className=\"inner\">\r\n                            <h2>Get In Touch</h2>\r\n                            <p>Any questions or concerns? Please feel free to send us \r\n                                <br /> a message below! \r\n                            </p>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"name\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"message\">Message</label>\r\n                                <textarea className=\"form-control\" rows=\"5\" id=\"message\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"button alt\">Submit</button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </section >\r\n        );\r\n    }\r\n    onNameChange(event) {\r\n        this.setState({name: event.target.value})\r\n    }\r\n  \r\n    onEmailChange(event) {\r\n        this.setState({email: event.target.value})\r\n    }\r\n  \r\n    onMessageChange(event) {\r\n        this.setState({message: event.target.value})\r\n    }\r\n}\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\getstarted\\GetStarted.js",["182"],"import React, { Component } from 'react';\r\nimport { isEmail } from \"validator\";\r\nimport AuthService from \"./../../services/auth.service\"\r\n\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst verifirstname = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Please enter a value between 3 and 20 letters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst verilastname = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Please enter a value between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword2 = value => {\r\n\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default class GetStarted extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeFirstName(e) {\r\n        this.setState({\r\n            firstName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastName(e) {\r\n        this.setState({\r\n            lastName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.firstName,\r\n                this.state.lastName,\r\n                this.state.email,\r\n                this.state.password,\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup\">\r\n                <h1>Begin Your Fresh Journey!</h1>\r\n                <p>Please enter your name and information below</p>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-container\">\r\n                        <img\r\n                            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                            alt=\"profile-img\"\r\n                            className=\"profile-img-card\"\r\n                        />\r\n\r\n                        <Form\r\n                            onSubmit={this.handleRegister}\r\n                            ref={c => {\r\n                                this.form = c;\r\n                            }}\r\n                        >\r\n                            {!this.state.successful && (\r\n                                <div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"firstName\">Firstname</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"firstName\"\r\n                                            value={this.state.firstName}\r\n                                            onChange={this.onChangeFirstName}\r\n                                            validations={[required, verifirstname]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"lastname\">Lastname</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"lastName\"\r\n                                            value={this.state.lastName}\r\n                                            onChange={this.onChangeLastName}\r\n                                            validations={[required, verilastname]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            value={this.state.email}\r\n                                            onChange={this.onChangeEmail}\r\n                                            validations={[required, email]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <Input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            value={this.state.password}\r\n                                            onChange={this.onChangePassword}\r\n                                            validations={[required, vpassword]}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"button alt\">\r\n                                        <button className=\"button alt\">Sign Up</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {this.state.message && (\r\n                                <div className=\"form-group\">\r\n                                    <div\r\n                                        className={\r\n                                            this.state.successful\r\n                                                ? \"alert alert-success\"\r\n                                                : \"alert alert-danger\"\r\n                                        }\r\n                                        role=\"alert\"\r\n                                    >\r\n                                        {this.state.message}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <CheckButton\r\n                                style={{ display: \"none\" }}\r\n                                ref={c => {\r\n                                    this.checkBtn = c;\r\n                                }}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\header\\Header.js",["183","184","185","186","187","188","189"],"import { Dropdown } from 'bootstrap';\r\nimport React, { Component } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport logomain from '../../images/logomain.jpg';\r\nimport { MenuDropdown } from '../dropdowns/DropDowns';\r\nimport DropDownsContainer from '../dropdowns/DropDownsContainer';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Menu from './Menu';\r\nimport Login from './../login/Login';\r\nimport GetStarted from './../getstarted/GetStarted';\r\nimport Home from './../home/Home';\r\nimport Profile from './../profile/Profile';\r\nimport BoardUser from './../user/board.user';\r\nimport BoardModerator from './../user/board.moderator';\r\nimport BoardAdmin from './../user/board.admin';\r\nimport UserService from '../../services/user.service';\r\nimport AuthService from '../../services/auth.service';\r\nimport ModalMenu from './../dropdowns/ModalMenu';\r\nimport Recipes from './../search/Recipes';\r\nimport RecipeList from './../search/RecipeList';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.logOut = this.logOut.bind(this);\r\n        this.addMenu = this.addMenu.bind(this);\r\n\r\n        this.state = {\r\n            showModeratorBoard: false,\r\n            showAdminBoard: false,\r\n            currentUser: undefined,\r\n            modalMenuToggle: false\r\n        };\r\n\r\n       \r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            this.setState({\r\n                currentUser: user,\r\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n            });\r\n        }\r\n    }\r\n\r\n    logOut() {\r\n        AuthService.logout();\r\n    }\r\n\r\n    modalMenuHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            modalMenuToggle: !this.state.modalMenuToggle\r\n        });\r\n    }\r\n\r\n    addMenu() {\r\n        this.setState({ modalMenuToggle: true})\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n        return (\r\n                <div>\r\n                    <header id=\"header\">\r\n                    <nav className=\"left\">\r\n                        <button className=\"glyphicon glyphicon-menu-hamburger\" onClick={this.addMenu}></button>\r\n                        <ModalMenu show={this.state.modalMenuToggle} modalMenuClosed={this.modalMenuHandler}>\r\n                            <div style={{color: 'green'}} className=\"box-3\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/home\"} className=\"btn-three\">\r\n                                        Home</Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/recipes\"} className=\"btn-three\">\r\n                                        Search\r\n                                    </Link>\r\n\r\n                                </li>\r\n                                \r\n\r\n                                {showModeratorBoard && (\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={\"/mod\"} className=\"btn-three\">\r\n                                            Moderator Board</Link>\r\n                                    </li>\r\n                                )}\r\n                                \r\n                                {showAdminBoard && (\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={\"/admin\"} className=\"btn-three\">\r\n                                            Admin Board</Link>\r\n                                    </li>\r\n                                )}\r\n                                \r\n                                {currentUser && (\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={\"/user\"} className=\"btn-three\">\r\n                                            User\r\n                                </Link>\r\n                                    </li>\r\n                                )}\r\n                            </div>\r\n                            \r\n                            {currentUser ? (\r\n                                <div className=\"box-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={\"/profile\"} className=\"btn-three\">\r\n                                            {currentUser.username}\r\n                                    My Fresh Dates\r\n                                </Link>\r\n                                    </li>\r\n                                    \r\n                                    <li className=\"nav-item\">\r\n                                        <a href=\"/login\" className=\"btn-three\" onClick={this.logOut}>\r\n                                            LogOut</a>\r\n                                    </li>\r\n                                </div>) : (<div className=\"box-3\">\r\n                                \r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={\"/login\"} className=\"btn-three\">\r\n                                            Login</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link to={\"/get-started\"} className=\"btn-three\">\r\n                                            Sign Up</Link>\r\n                                    </li>\r\n                                    \r\n                                </div>\r\n                                )}\r\n                        </ModalMenu>\r\n                    </nav>\r\n                    <Link className=\"logo\" to=\"/\"><img src={logomain} width=\"200\" height=\"80\" /></Link>\r\n                    <nav className=\"right\">\r\n                    </nav>\r\n                    </header>\r\n                    <div className=\"container mt-3\">\r\n                        <Switch>\r\n                            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Route exact path=\"/recipes\" component={RecipeList} />\r\n                            <Route exact path=\"/get-started\" component={GetStarted} />\r\n                            <Route exact path=\"/profile\" component={Profile} />\r\n                            <Route path=\"/user\" component={BoardUser} />\r\n                            <Route path=\"/mod\" component={BoardModerator} />\r\n                            <Route path=\"/admin\" component={BoardAdmin} />\r\n                        </Switch>\r\n                    </div>\r\n\r\n                </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\Profile.js",["190","191","192","193","194","195","196","197","198"],"import React, { Component, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Modal from './../dropdowns/Modal';\r\nimport axios from 'axios';\r\nimport AuthService from \"./../../services/auth.service\";\r\nimport ItemService from \"./../../services/item.service\";\r\nimport itemService from './../../services/item.service';\r\nimport authHeader from './../../services/auth-header';\r\nimport moment from 'moment';\r\nimport Countdown from 'react-countdown';\r\nimport ManualMenu from './../dropdowns/ManualMenu';\r\nimport Funny from '../../images/profileimages/funny.jpg';\r\nimport EditModal from './../dropdowns/EditModal';\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addItem = this.addItem.bind(this);\r\n    }\r\n\r\n    state = {\r\n        currentUser: AuthService.getCurrentUser(),\r\n        listname: [],\r\n        listtype: [],\r\n        items: [],\r\n        taglistname: '',\r\n        taglisttype: '',\r\n        newItem: {\r\n            userItemName: '',\r\n            userItemType: '',\r\n            produceID: '',\r\n            setDate: '',\r\n            manInput: false,\r\n            daysUntil: 0,\r\n        },\r\n\r\n        modalToggle: false,\r\n        editModalToggle: false,\r\n        item: {\r\n            itemID: ''\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        ItemService.getAllValues().then((res) => {\r\n            this.setState({ items: res.data });\r\n        });\r\n\r\n        axios.get(\"http://localhost:8080/freshdate/auth/display-by-name\", { headers: authHeader() })\r\n            .then(res => {\r\n                console.log('type name d=g', res.data)\r\n                this.setState({ listname: res.data })\r\n            })\r\n\r\n        axios.get(\"http://localhost:8080/freshdate/auth/display-by-type\", { headers: authHeader() })\r\n            .then(res => {\r\n                console.log('type data d=g', res.data)\r\n                this.setState({ listtype: res.data })\r\n            })\r\n    }\r\n\r\n    handleDropDown = (tag, name) => {\r\n        const tempItem = { ...this.state.newItem }\r\n        tempItem[name] = tag;\r\n        this.setState({ newItem: tempItem });\r\n    }\r\n\r\n    editHandleDropDown = (tag, name) => {\r\n        const tempItem = { ...this.state.newItem }\r\n        tempItem[name] = tag;\r\n        this.setState({ newItem: tempItem });\r\n    }\r\n\r\n    modalHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            modalToggle: !this.state.modalToggle\r\n        });\r\n    }\r\n\r\n    editModalHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            editModalToggle: !this.state.editModalToggle\r\n        })\r\n    }\r\n\r\n    addItem() {\r\n        this.setState({ modalToggle: true })\r\n    }\r\n\r\n    saveNewItem = (event) => {\r\n        itemService.addNewValue(this.state.newItem).then(res => {\r\n            this.setState({\r\n                modalToggle: !this.state.modalToggle\r\n            })\r\n            this.componentDidMount();\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    editItem = (event) => {\r\n        this.setState({ editModalToggle: true })\r\n    }\r\n\r\n    removeItem = (event) => {\r\n        event.preventDefault();\r\n        const id = event.target.value;\r\n        const params = { itemID: id }\r\n        axios.delete('http://localhost:8080/freshdate/auth/delete-item', { params })\r\n            .then(response => {\r\n                (\r\n                    this.componentDidMount());\r\n            }).catch(error => {\r\n                console.log('fail');\r\n            })\r\n    }\r\n\r\n    handleIdChange = (tempDelete) => {\r\n        this.setState({\r\n            item: tempDelete\r\n        })\r\n    }\r\n\r\n    handleDropChange = (list) => {\r\n        this.setState({ list })\r\n    }\r\n\r\n    handleClick = (manInput) => {\r\n        this.setState({\r\n            manInput: true\r\n        })\r\n        console.log(\"something's coming\")\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const value = event.target.value;\r\n        const tempNewItem = { ...this.state.newItem }\r\n        tempNewItem.itemName = value;\r\n        this.setState(\r\n            {\r\n                newItem: tempNewItem ? tempNewItem.getTime() : null\r\n            }\r\n        )\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        const tempNewItem = { ...this.state.newItem };\r\n        tempNewItem.setDate = date;\r\n        this.setState({\r\n            newItem: tempNewItem\r\n        });\r\n        console.log(date);\r\n    }\r\n\r\n    render() {\r\n        const { currentUser } = this.state;\r\n        const { state } = this;\r\n        let { significance, diff } = state;\r\n        // eslint-disable-next-line camelcase\r\n        let { locales, locales_plural } = this.props;\r\n        let units = ['year', 'month', 'day', 'hour', 'min', 'sec'];\r\n\r\n        moment.locale('en');\r\n        // const dt = new Date(this.props.setDate.toLocaleDateString());\r\n        // const dte = new Date(this.props.expDate);\r\n        // const showset = dt.getTime();\r\n        // const showexp = dte.getTime();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"col-xl-3 col-lg-3 col-md-5 col-sm-12 col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <img\r\n                                src={Funny}\r\n                                alt=\"profile-img\"\r\n                                className=\"profile-img-card\"\r\n                            />\r\n                            <div className=\"user-avatar text-center d-block\">\r\n                                <a href=\"#\" data-toggle=\"model\" data-target=\"#add-images\">\r\n                                    <h3 class=\"mb-2\">{currentUser.firstName}'s Profile</h3>\r\n                                </a>\r\n                            </div>\r\n                            {/* <p>\r\n                                <strong>Token:</strong>{\" \"}\r\n                                {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n                                {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n                            </p> */}\r\n                            <p>\r\n                                <strong>Id:</strong>{\" \"}\r\n                                {currentUser.id}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email:</strong>{\" \"}\r\n                                {currentUser.email}\r\n                            </p>\r\n                            {/* <strong>Status:</strong>\r\n                            <ul>\r\n                                {currentUser.roles &&\r\n                                    currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n                            </ul> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-center\">Expiration Status</h2>\r\n                    <div className=\"row\">\r\n                        <button className=\"glyphicon glyphicon-plus\" onClick={this.addItem}>Add</button>\r\n                        {/* if (manInput === false) {\r\n                            is our itemName consistent with the backend and the\r\n                            UI?\r\n                        } */}\r\n                        <Modal show={this.state.modalToggle} modalClosed={this.modalHandler}>\r\n                            <div style={{ color: 'black' }}>\r\n                                <form>\r\n                                    <p>Select produce name:</p>\r\n                                    <div className=\"dropdown\">\r\n                                        <select placeholder=\"select from list \" onChange={e =>\r\n                                            this.handleDropDown(e.target.value, 'userItemName')} required\r\n                                            value={this.state.newItem.userItemName}\r\n                                        ><option value=''>Select</option>\r\n                                            {this.state.listname.map(tagname => (\r\n                                                <option key={tagname} value={tagname}>\r\n                                                    {tagname}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <p>How will you store it?</p>\r\n                                    <div className=\"dropdown\">\r\n                                        <select placeholder=\"select from list \" onChange={e =>\r\n                                            this.handleDropDown(e.target.value, 'userItemType')} required\r\n                                            value={this.state.newItem.userItemType}\r\n                                        ><option value=''>Select</option>\r\n                                            {this.state.listtype.map(tagtype => (\r\n                                                <option key={tagtype} value={tagtype}>\r\n                                                    {tagtype}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <p>Choose date and time of purchase: </p>\r\n                                    <DatePicker\r\n                                        format={\"dd-MM-yyyy hh:mm:ss a\"}\r\n                                        selected={this.state.newItem.setDate}\r\n                                        onChange={this.handleDateChange}\r\n                                        name=\"startDate\"\r\n                                        todayButton=\"Today\"\r\n\r\n                                        showTimeSelect\r\n                                        timeFormat=\"HH:mm\"\r\n                                        timeIntervals={15}\r\n                                        timeCaption=\"time\"\r\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                    />\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <button className=\"button alt\" onClick={this.saveNewItem} type=\"button\">Add It!</button>\r\n                                    </div>\r\n                                    {/* <div className=\"form-group\">\r\n                                        <a className=\"manual-option\" onClick={this.handleClick}>\r\n                                            Already know your expiration date? Click Here!\r\n                                        </a>\r\n                                        \r\n                                    </div> */}\r\n                                </form>\r\n                            </div>\r\n\r\n                        </Modal>\r\n                        <div className=\"col-md-14\">\r\n                            <table className=\"table-wrapper\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Item Name</th>\r\n                                        <th>Item Storage</th>\r\n                                        <th>Date Added</th>\r\n                                        <th>Expiration in: (day : hr : min : sec)</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.items.map(\r\n                                            item =>\r\n                                                <tr key={item.itemID}>\r\n                                                    <td>{item.userItemName}</td>\r\n                                                    <td>{item.userItemType}</td>\r\n                                                    <td>{new Intl.DateTimeFormat('en-US')\r\n                                                        .format(new Date(item.setDate))}</td>\r\n                                                    <td><Countdown date={new Date(item.expDate)} /></td>\r\n                                                    <td items={this.state.items}>\r\n                                                        <button onClick={this.editItem} className=\"glyphicon glyphicon-calendar\"></button>\r\n                                                        <button style={{ marginLeft: \"10px\" }} value={item.itemID} onClick={this.removeItem} className=\"glyphicon glyphicon-trash\"></button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\login\\Login.js",["199","200","201"],"import React, { Component } from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { ReactDOM } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Axios } from 'axios'\r\n\r\nimport AuthService from \"./../../services/auth.service\";\r\n\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.email, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push(\"/profile\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response && error.response.data &&\r\n                            error.response.data.message) || error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"login\">\r\n\r\n                <h1>Welcome Back</h1>\r\n                <p>Please enter your name and information below</p>\r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-container\">\r\n                        <img\r\n                            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                            alt=\"profile-img\"\r\n                            className=\"profile-img-card\"\r\n                        />\r\n\r\n                        <Form\r\n                            onSubmit={this.handleLogin}\r\n                            ref={c => {\r\n                                this.form = c;\r\n                            }}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Email</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChangeEmail}\r\n                                    validations={[required]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChangePassword}\r\n                                    validations={[required]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    className=\"button alt\"\r\n                                    disabled={this.state.loading}\r\n                                >\r\n                                    {this.state.loading && (\r\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                    )}\r\n                                    <span>Login</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {this.state.message && (\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                                        {this.state.message}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <CheckButton\r\n                                style={{ display: \"none\" }}\r\n                                ref={c => {\r\n                                    this.checkBtn = c;\r\n                                }}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\freshresources\\FreshResources.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\DropDowns.js",["202","203","204"],"\r\nimport React from 'react';\r\n\r\n    const MenuDropdown = ({current, prev}) => {\r\n        return (\r\n            <div className=\"menu-dropdown-el dropdown-el\" data-current={current} data-prev={prev}>\r\n                <div data-prevent-distortion>\r\n                    <div className=\"dropdown-section\">\r\n                        <ul className=\"menu-section\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Fresh Resources</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">About Us</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\nexport default MenuDropdown;\r\n\r\n\r\n\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\DropDownsContainer.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\header\\Menu.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\Modal.js",["205"],"import { Modal } from 'bootstrap';\r\nimport React from 'react';\r\nimport Backdrop from './Backdrop';\r\nimport classes from '../dropdowns/modal.module.css';\r\n\r\nconst modal = props => {\r\n    return (\r\n        <>\r\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n        <div className={classes.Modal} style={{\r\n            transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity : props.show ? 1 : 0\r\n        }}>\r\n            {props.children}\r\n        </div></>\r\n    );\r\n};\r\n\r\nexport default modal;","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\Backdrop.js",[],["206","207"],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\auth.service.js",["208"],"import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nconst API_URL = \"http://localhost:8080/freshdate/auth/\";\r\n\r\nclass AuthService {\r\n    login(email, password) {\r\n        return axios.post(API_URL + \"login\", {\r\n            email,\r\n            password\r\n        })\r\n        .then(response => {\r\n            if (response.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n\r\n            return response.data;\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(firstName, lastName, email, password, password2) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            password,\r\n            password2\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));;\r\n    }\r\n}\r\nexport default new AuthService();","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\user.service.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\auth-header.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\user\\board.moderator.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\user\\board.admin.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\user\\board.user.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\itemNameList.js",["209"],"import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport axios from 'axios';\r\nimport authHeader from './../../services/auth-header';\r\nexport default class itemNameList extends Component {\r\n\r\n    state = {\r\n        names: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/freshdate/auth/display-by-name\", { headers: authHeader() })\r\n        .then(res => {\r\n            const names = res.data;\r\n            this.setState({names})\r\n        })\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <select placeholder=\"\">\r\n                {this.state.names.map(itemList => <option>{itemList.itemName}</option>)}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\item.service.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\itemTypeList.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\AddItems.js",["210","211","212","213"],"import React, { Component } from 'react';\r\nimport { DatePicker } from 'react-datepicker';\r\nimport { Modal } from 'bootstrap';\r\nimport itemService from './../../services/item.service';\r\nimport itemTypeList from './itemTypeList';\r\nimport itemNameList from './itemNameList';\r\n\r\nclass AddItems extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            itemName: '',\r\n            itemType: '',\r\n            setDate: new Date(),\r\n            manInput: false,\r\n            manNameInput: '',\r\n            manualDate: new Date(),\r\n            manualExpiration: new Date(),\r\n        }\r\n\r\n        this.changeItemNameHandler = this.changeItemNameHandler.bind(this);\r\n        this.changeItemTypeHandler = this.changeItemNameHandler.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.onDateSubmit = this.onDateSubmit.bind(this);\r\n        this.isManualInput = this.isManualInput.bind(this);\r\n        this.onManualNameInput = this.onManualNameInput.bind(this);\r\n        this.onManualDateChange = this.onManualDateChange(this);\r\n        this.onManualExpirationChange = this.onManualExpirationChange.bind(this);\r\n        this.editDateItem = this.editDateItem.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.id === 'add-item') {\r\n            return\r\n        } if (this.state.id === 'add-manual-item') {\r\n            return\r\n        } else {\r\n            itemService.getAllValues(this.state.id).then((res) => {\r\n                let item = res.data;\r\n                this.setState({\r\n                    itemName: item.itemName,\r\n                    itemType: item.itemType,\r\n                    setDate: item.setDate\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    addItemType = (e) => {\r\n        e.preventDefault();\r\n        let items = {itemName: this.state.itemName, itemTypeList: this.state.itemType,\r\n        setDate: this.state.setDate}\r\n    }\r\n\r\n    changeItemNameHandler = (event) => {\r\n        this.setState({itemName: this.target.value});\r\n    }\r\n\r\n    changeItemTypeHandler = (event) => {\r\n        this.setState({itemType: this.target.value});\r\n    }\r\n\r\n    handleDateChange(date) {\r\n        this.setState({\r\n            setDate: date\r\n        });\r\n    }\r\n\r\n    onDateSubmit(e) {\r\n        e.preventDefault();\r\n        // Axios info here\r\n    }\r\n\r\n    editDateItem(id) {\r\n        this.props.history.push('/edit-date')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"example-wrapper\" style={{ minHeight: '400px' }}>\r\n                    <div className=\"col-xs-12 col-sm-6 example-col\">\r\n                        <div className=\"form-group\">\r\n                            <form onSubmit={this.onDateSubmit}>\r\n                                <p>Choose date and time of purchase: </p>\r\n                                <DatePicker\r\n                                    format={\"dd-MM-yyyy hh:mm:ss a\"}\r\n                                    selected={this.state.setDate}\r\n                                    onChange={this.handleDateChange}\r\n                                    name=\"startDate\"\r\n                                    todayButton=\"Today\"\r\n\r\n                                    showTimeSelect\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={15}\r\n                                    timeCaption=\"time\"\r\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                />\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"button alt\">Show Date</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItems;","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\profile\\CountdownClock.js",["214","215","216","217","218","219"],"import react from 'react';\r\nimport React, { Component } from 'react';\r\nimport Countdown from 'react-countdown';\r\nimport ItemService from \"./../../services/item.service\";\r\nimport axios from 'axios';\r\nimport authHeader from './../../services/auth-header';\r\nimport { now } from 'moment';\r\nimport Profile from './Profile';\r\n\r\nclass CountDownClock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        items: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        ItemService.getAllValues().then((res) => {\r\n            this.setState({ items: res.data });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-14\">\r\n                <table className=\"table-wrapper\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Item Name</th>\r\n                            <th>Item Storage</th>\r\n                            <th>Date Added</th>\r\n                            <th>Expiration in: (hr:min:sec)</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.items.map(\r\n                                item =>\r\n                                    <tr key={item.itemID}>\r\n                                        <td>{item.userItemName}</td>\r\n                                        <td>{item.userItemType}</td>\r\n                                        <td>{item.setDate}</td>\r\n                                        <td><Countdown date={new Date(item.expDate)} />\r\n                                        </td>\r\n                                        <td items={this.state.items}>\r\n                                            <button onClick={this.editItem} className=\"glyphicon glyphicon-calendar\"></button>\r\n                                            <button style={{ marginLeft: \"10px\" }} value={item.itemID} onClick={this.removeItem} className=\"glyphicon glyphicon-trash\"></button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n               \r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default CountDownClock;\r\n",["220","221"],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\ModalMenu.js",["222"],"import React from 'react';\r\nimport Backdrop from './Backdrop';\r\nimport classes from '../dropdowns/modal.module.css';\r\nimport { Modal } from 'bootstrap';\r\nconst modalMenu = props => {\r\n    return (<>\r\n        <Backdrop show={props.show} clicked={props.modalMenuClosed}/>\r\n        <div className={classes.ModalMenu} style={{\r\n            transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity : props.show ? 1 : 0\r\n        }}>\r\n            {props.children}\r\n        </div></>\r\n    )\r\n\r\n}\r\nexport default modalMenu;","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\ManualMenu.js",["223"],"import React from 'react';\r\nimport Backdrop from './Backdrop';\r\nimport classes from '../dropdowns/modal.module.css';\r\nimport { Modal } from 'bootstrap';\r\n\r\nconst manualMenu = props => {\r\n    return(\r\n        <>\r\n        <Backdrop show={props.show} clicked={props.manualMenuClosed}/>\r\n        <div className={classes.ManualMenu} style={{\r\n            transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity : props.show ? 1 : 0\r\n        }}>\r\n            {props.children}\r\n        </div></>\r\n    )\r\n    \r\n}\r\nexport default manualMenu;","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\Search.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\RecipeList.js",["224"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RecipeDataService from './../../services/recipe-service';\r\nimport authHeader from './../../services/auth-header';\r\nimport axios from 'axios';\r\nexport default class RecipeList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n        this.retrieveRecipes = this.retrieveRecipes.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveRecipe = this.setActiveRecipe.bind(this);\r\n        this.removeAllRecipes = this.removeAllRecipes.bind(this);\r\n        this.searchTitle = this.searchTitle.bind(this);\r\n        this.searchIngredient = this.searchIngredient.bind(this);\r\n\r\n        this.state = {\r\n            items: [],\r\n            searchlistname: '',\r\n            searchlistitem:'',\r\n            currentRecipes: null,\r\n            currentIndex: -1,\r\n            searchTitle: \"\",\r\n            searchIngredient: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retrieveRecipes();\r\n\r\n        axios.get(\"http://localhost:8080/freshdate/auth/findproduce\", {headers: authHeader})\r\n    }\r\n\r\n    onChangeSearchTitle(e) {\r\n        const searchTitle = e.target.value;\r\n\r\n        this.setState({\r\n            searchTitle: searchTitle\r\n        });\r\n    }\r\n\r\n    onChangeSearchIngredient(e) {\r\n        const searchIngredient = e.target.value;\r\n\r\n        this.setState({\r\n            searchIngredient: searchIngredient\r\n        });\r\n    }\r\n\r\n    retrieveRecipes() {\r\n        RecipeDataService.getAll()\r\n            .then(response => {\r\n                this.setState({\r\n                    items: response.data,\r\n                });\r\n                console.log(response.data);\r\n                console.log(\"right here!\")\r\n\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    refreshList() {\r\n        this.retrieveRecipes();\r\n        this.setState({\r\n            currentRecipes: null,\r\n            currentIndex: -1\r\n        });\r\n    }\r\n\r\n    setActiveRecipe(recipe, index) {\r\n        this.setState({\r\n            currentRecipes: recipe,\r\n            currentIndex: index\r\n        });\r\n    }\r\n\r\n    removeAllRecipes() {\r\n        RecipeDataService.deleteAll()\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.refreshList();\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    searchTitle() {\r\n        RecipeDataService.findByTitle(this.state.searchTitle)\r\n            .then(response => {\r\n                this.setState({\r\n                    items: response.data\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    searchIngredient() {\r\n        RecipeDataService.findByIngedient(this.state.searchIngredient)\r\n            .then(response => {\r\n                this.setState({\r\n                    recipes: response.data\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { items, searchTitle, currentRecipes, currentIndex } = this.state;\r\n\r\n        return (\r\n            <div className=\"list row\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Search by produce\"\r\n                            value={searchTitle}\r\n                            onChange={this.onChangeSearchTitle}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                className=\"button alt\"\r\n                                type=\"button alt\"\r\n                                onClick={this.searchTitle}\r\n                            >\r\n                                Search\r\n                  </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <h4>Produce List</h4>\r\n\r\n                    <ul className=\"list-group\">\r\n                        {items &&\r\n                            items.map((recipe, index) => (\r\n                                <li\r\n                                    className={\r\n                                        \"list-group-item \" +\r\n                                        (index === currentIndex ? \"active\" : \"\")\r\n                                    }\r\n                                    onClick={() => this.setActiveRecipe(recipe, index)}\r\n                                    key={index}\r\n                                >\r\n                                    {recipe.itemName} storage: {recipe.itemType} \r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n\r\n                    {/* <button\r\n                        className=\"button alt\"\r\n                        onClick={this.removeAllRecipes}\r\n                    >\r\n                        Remove All\r\n              </button> */}\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {currentRecipes ? (\r\n                        <div>\r\n                            <h4>Details</h4>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>The grocery item:</strong>\r\n                                </label>{\" \"}\r\n                                {currentRecipes.itemName}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Stored in:</strong>\r\n                                </label>{\" \"}\r\n                                {currentRecipes.itemType}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Will expire in about:</strong>\r\n                                </label>{\" \"}\r\n                                {currentRecipes.expiration} days.\r\n                            </div>\r\n                            <p><i>Disclaimer: The values provided are in accordance with statistics from <br/>\r\n                            both the United States Department of Agriculture (USDA.gov) and third-party<br/>\r\n                            entities. As a result, the produce and expiration times may vary, depending on <br/>\r\n                            conditions of product storage and time of placement.</i></p>\r\n\r\n                            {/* <Link\r\n                                to={\"/recipes/\" + currentRecipes.id}\r\n                                className=\"badge badge-warning\"\r\n                            >\r\n                                Edit\r\n                  </Link> */}\r\n                        </div>\r\n                    ) : (\r\n                            <div>\r\n                                <br />\r\n                                <p>Please click on a Item...</p>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\services\\recipe-service.js",["225","226","227"],"import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_RECIPE_URL = \"http://localhost:8080/freshdate/auth\"\r\nclass RecipeDataService {\r\n    \r\n    getAll() {\r\n        return axios.get(API_RECIPE_URL + '/findproduce', { headers: authHeader() });\r\n    }\r\n    get(id) {\r\n        return axios.post(API_RECIPE_URL + '/findproduce/${id}', { headers: authHeader() });\r\n    }\r\n\r\n    create(data) {\r\n        return axios.post(API_RECIPE_URL + '/findproduce', data, { headers: authHeader() });\r\n      }\r\n    \r\n      update(id, data) {\r\n        return axios.put(API_RECIPE_URL + '/findproduce/${id}', data, { headers: authHeader() });\r\n      }\r\n    \r\n      delete(id) {\r\n        return axios.delete(API_RECIPE_URL + '/findproduce/${id}', { headers: authHeader() });\r\n      }\r\n    \r\n      deleteAll() {\r\n        return axios.delete(API_RECIPE_URL + '/findproduce', { headers: authHeader() });\r\n      }\r\n    \r\n      findByTitle(title) {\r\n        return axios.get(API_RECIPE_URL + '/display-by-name', { headers: authHeader() });\r\n      }\r\n\r\n      findByIngredient(ingredients) {\r\n          return axios.get(API_RECIPE_URL + '/display-by-type', { headers: authHeader() });\r\n      }\r\n\r\n    // other CRUD methods\r\n}\r\nexport default new RecipeDataService();","C:\\Users\\Brandon\\Documents\\react-fresh\\src\\http-common.js",[],["228","229"],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\Recipes.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\search\\AddRecipe.js",[],"C:\\Users\\Brandon\\Documents\\react-fresh\\src\\component\\dropdowns\\EditModal.js",["230"],"import { Modal } from 'bootstrap';\r\nimport React from 'react';\r\nimport Backdrop from './Backdrop';\r\nimport classes from '../dropdowns/modal.module.css';\r\n\r\nconst editModal = props => {\r\n    return (\r\n        <>\r\n        <Backdrop show={props.show} clicked={props.editModalClosed}/>\r\n        <div className={classes.EditModal} style={{\r\n            transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity : props.show ? 1 : 0\r\n        }}>\r\n            {props.children}\r\n        </div></>\r\n    );\r\n};\r\n\r\nexport default editModal;",{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":12},{"ruleId":"235","severity":1,"message":"239","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"240","line":7,"column":8,"nodeType":"237","messageId":"238","endLine":7,"endColumn":17},{"ruleId":"235","severity":1,"message":"241","line":7,"column":9,"nodeType":"237","messageId":"238","endLine":7,"endColumn":15},{"ruleId":"235","severity":1,"message":"242","line":7,"column":24,"nodeType":"237","messageId":"238","endLine":7,"endColumn":30},{"ruleId":"235","severity":1,"message":"243","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":20},{"ruleId":"235","severity":1,"message":"244","line":11,"column":8,"nodeType":"237","messageId":"238","endLine":11,"endColumn":20},{"ruleId":"235","severity":1,"message":"245","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":16},{"ruleId":"235","severity":1,"message":"246","line":16,"column":13,"nodeType":"237","messageId":"238","endLine":16,"endColumn":19},{"ruleId":"235","severity":1,"message":"247","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":26},{"ruleId":"235","severity":1,"message":"248","line":7,"column":8,"nodeType":"237","messageId":"238","endLine":7,"endColumn":18},{"ruleId":"235","severity":1,"message":"249","line":70,"column":13,"nodeType":"237","messageId":"238","endLine":70,"endColumn":26},{"ruleId":"235","severity":1,"message":"250","line":59,"column":7,"nodeType":"237","messageId":"238","endLine":59,"endColumn":17},{"ruleId":"235","severity":1,"message":"251","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":18},{"ruleId":"235","severity":1,"message":"252","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":22},{"ruleId":"235","severity":1,"message":"247","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":26},{"ruleId":"235","severity":1,"message":"253","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":12},{"ruleId":"235","severity":1,"message":"254","line":16,"column":8,"nodeType":"237","messageId":"238","endLine":16,"endColumn":19},{"ruleId":"235","severity":1,"message":"255","line":19,"column":8,"nodeType":"237","messageId":"238","endLine":19,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":141,"column":51,"nodeType":"258","endLine":141,"endColumn":97},{"ruleId":"235","severity":1,"message":"259","line":1,"column":28,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"260","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":18},{"ruleId":"235","severity":1,"message":"261","line":14,"column":8,"nodeType":"237","messageId":"238","endLine":14,"endColumn":17},{"ruleId":"235","severity":1,"message":"262","line":161,"column":15,"nodeType":"237","messageId":"238","endLine":161,"endColumn":27},{"ruleId":"235","severity":1,"message":"263","line":161,"column":29,"nodeType":"237","messageId":"238","endLine":161,"endColumn":33},{"ruleId":"235","severity":1,"message":"264","line":163,"column":15,"nodeType":"237","messageId":"238","endLine":163,"endColumn":22},{"ruleId":"235","severity":1,"message":"265","line":163,"column":24,"nodeType":"237","messageId":"238","endLine":163,"endColumn":38},{"ruleId":"235","severity":1,"message":"266","line":164,"column":13,"nodeType":"237","messageId":"238","endLine":164,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":183,"column":33,"nodeType":"258","endLine":183,"endColumn":91},{"ruleId":"235","severity":1,"message":"269","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":18},{"ruleId":"235","severity":1,"message":"270","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":23},{"ruleId":"235","severity":1,"message":"271","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":15},{"ruleId":"267","severity":1,"message":"268","line":11,"column":33,"nodeType":"258","endLine":11,"endColumn":66},{"ruleId":"267","severity":1,"message":"268","line":14,"column":33,"nodeType":"258","endLine":14,"endColumn":66},{"ruleId":"267","severity":1,"message":"268","line":17,"column":33,"nodeType":"258","endLine":17,"endColumn":66},{"ruleId":"235","severity":1,"message":"272","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":15},{"ruleId":"231","replacedBy":"273"},{"ruleId":"233","replacedBy":"274"},{"ruleId":"235","severity":1,"message":"248","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":18},{"ruleId":"235","severity":1,"message":"275","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":15},{"ruleId":"235","severity":1,"message":"272","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":15},{"ruleId":"235","severity":1,"message":"244","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":20},{"ruleId":"235","severity":1,"message":"243","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":20},{"ruleId":"235","severity":1,"message":"276","line":54,"column":13,"nodeType":"237","messageId":"238","endLine":54,"endColumn":18},{"ruleId":"235","severity":1,"message":"277","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"278","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":13},{"ruleId":"235","severity":1,"message":"248","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"279","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":13},{"ruleId":"235","severity":1,"message":"275","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":11,"column":5,"nodeType":"282","messageId":"283","endLine":13,"endColumn":6},{"ruleId":"231","replacedBy":"284"},{"ruleId":"233","replacedBy":"285"},{"ruleId":"235","severity":1,"message":"272","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":15},{"ruleId":"235","severity":1,"message":"272","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":15},{"ruleId":"235","severity":1,"message":"286","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"288","line":11,"column":44,"nodeType":"289","messageId":"290","endLine":11,"endColumn":64},{"ruleId":"287","severity":1,"message":"288","line":19,"column":43,"nodeType":"289","messageId":"290","endLine":19,"endColumn":63},{"ruleId":"287","severity":1,"message":"288","line":23,"column":46,"nodeType":"289","messageId":"290","endLine":23,"endColumn":66},{"ruleId":"231","replacedBy":"291"},{"ruleId":"233","replacedBy":"292"},{"ruleId":"235","severity":1,"message":"272","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":15},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'RecipeList' is defined but never used.","'AddRecipe' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'itemNameList' is defined but never used.","'itemTypeList' is defined but never used.","'AddItems' is defined but never used.","'routes' is assigned a value but never used.","'DropDownsContainer' is defined but never used.","'authHeader' is defined but never used.","'signInSignOut' is assigned a value but never used.","'vpassword2' is assigned a value but never used.","'Dropdown' is defined but never used.","'MenuDropdown' is defined but never used.","'Menu' is defined but never used.","'UserService' is defined but never used.","'Recipes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'ManualMenu' is defined but never used.","'EditModal' is defined but never used.","'significance' is assigned a value but never used.","'diff' is assigned a value but never used.","'locales' is assigned a value but never used.","'locales_plural' is assigned a value but never used.","'units' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'Axios' is defined but never used.","'Modal' is defined but never used.",["293"],["294"],"'Profile' is defined but never used.","'items' is assigned a value but never used.","'react' is defined but never used.","'axios' is defined but never used.","'now' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["293"],["294"],"'Link' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["293"],["294"],"no-global-assign","no-unsafe-negation"]